{"version":3,"sources":["pages/Homepage.js","pages/Login.js","pages/Sigup.js","pages/Dashboard.js","pages/Issues.js","components/MessageSearch.js","components/AddMessageModal.js","img/info-icon.png","img/important-icon.jpg","components/UpdateMessageForm.js","pages/Messages.js","pages/Tenants.js","pages/Voting.js","components/HoaNavbar.js","App.js","reportWebVitals.js","index.js"],"names":["Homepage","props","className","React","Component","Login","updatePwd","event","setState","pwd","target","value","updateEmail","email","handleLogin","foundUser","allUsers","find","user","state","login","window","location","href","alert","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","type","placeholder","onChange","this","span","offset","Button","onClick","variant","block","to","Signup","createUser","newUserObj","name","building","adress","city","tel","addUser","e","Dashboard","activeUser","Issues","MessageSearch","updateSearchQuery","searchQuery","onSearchParamsUpdate","updatePriorityFilter","priorityFilter","updateSortBy","sortBy","md","lg","FormControl","inline","Check","checked","label","AddMessageModal","clearFields","title","details","priority","img","closeModal","handleClose","saveDetails","onSave","Modal","show","isModalOpen","onHide","Header","closeButton","Title","Body","required","Footer","UpdateMessageForm","saveMessage","messageToUpdate","onCancel","priority_values","info","important","Messages","getFilteredMessages","messages","searchParameters","filter","m","includes","sort","m1","m2","Date","date","updateSearchParameters","params","updateShownMessages","filteredMessages","setMessageToUpdate","message","saveModalInfo","newMessage","userId","id","toJSON","messageId","v4","localStorage","setItem","JSON","stringify","prevState","updateMessage","updatedMessage","deleteMessage","idToDelete","nextMessages","localMessages","parse","getItem","messagesJSON","currentlyOpenCard","role","Accordion","onSelect","cardId","map","Card","border","Toggle","eventKey","clsx","src","infoIcon","importantIcon","alt","Collapse","onUpdate","Tenants","Container","fluid","Voting","HoaNavbar","menuEl","Nav","Link","loginEl","signupEl","nameEl","disabled","logoutEl","handleLogout","Navbar","bg","expand","Brand","aria-controls","App","newUser","localUsersString","concat","userObj","usersData","userJSON","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7931629.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Homepage extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"p-homepage\">\r\n                I am Homepage\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            pwd: '',\r\n        }\r\n    }\r\n    updatePwd = (event) => {\r\n        this.setState({\r\n            pwd: event.target.value\r\n        });\r\n    }\r\n    updateEmail = (event) => {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n    handleLogin = () => {\r\n        const foundUser = this.props.allUsers.find( (user) => {\r\n            return (user.email === this.state.email && user.pwd === this.state.pwd);\r\n        });\r\n        if(foundUser) {\r\n            this.props.login(foundUser);\r\n            window.location.href = '/#/messages';\r\n        }\r\n        else{\r\n            alert('Incorrect Email or Password');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"p-login\">\r\n                <h1>Login to HomeOwner Assosiation Management System</h1>\r\n                <Form className=\"mt-5\">\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Email\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <Form.Control type=\"email\" placeholder=\"Email\" onChange={this.updateEmail} value={this.state.email}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={2}>\r\n                        Password\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.updatePwd} value={this.state.pwd}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Button onClick={this.handleLogin} variant=\"success\" block type=\"button\">Log in</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n                <Link to=\"/signup\">Sign up</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Button, Form} from 'react-bootstrap';\r\n\r\nclass Signup extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            pwd: '',\r\n            building: '',\r\n            adress: '',\r\n            city: '',\r\n            tel: ''\r\n        }\r\n    }\r\n    createUser = () => {\r\n        const newUserObj = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            pwd: this.state.pwd,\r\n            building: this.state.building,\r\n            adress: this.state.adress,\r\n            city: this.state.city,\r\n            tel: this.state.tel\r\n        }\r\n        this.props.addUser(newUserObj);\r\n        window.location.href = '/#/dashboard';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"p-signup\">\r\n                <h1>Create a Committe Member Account</h1>\r\n                <Form className=\"mt-5\">\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label column sm={2}>\r\n                        Name\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Name\" onChange={(e) => this.setState({name: e.target.value})} value={this.state.name}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Email\r\n                        </Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Email\" onChange={(e) => this.setState({email: e.target.value})} value={this.state.email}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label column sm={2}>\r\n                        Password\r\n                        </Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => this.setState({pwd: e.target.value})} value={this.state.pwd}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicBuilding\">\r\n                        <Form.Label column sm={2}>\r\n                        Building/Condominium\r\n                        </Form.Label >\r\n                        <Form.Control type=\"text\" placeholder=\"Building/Condominium\" onChange={(e) => this.setState({building: e.target.value})} value={this.state.building}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicAdress\">\r\n                        <Form.Label column sm={2}>\r\n                        Adress\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Adress\" onChange={(e) => this.setState({adress: e.target.value})} value={this.state.adress}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicCity\">\r\n                        <Form.Label column sm={2}>\r\n                        City\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"City\" onChange={(e) => this.setState({city: e.target.value})} value={this.state.city}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPhone\">\r\n                        <Form.Label column sm={2}>\r\n                        Phone number\r\n                        </Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Phone number\" onChange={(e) => this.setState({tel: e.target.value})} value={this.state.tel}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Button onClick={this.createUser} variant=\"success\" block type=\"button\">Sign up!</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        if(!this.props.activeUser){\r\n            window.location.href = \"/#/login\"\r\n        }\r\n        return (\r\n            <div className=\"p-dashboard\">\r\n                I am Dashboard\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\n\r\nclass Issues extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        if(!this.props.activeUser){\r\n            window.location.href = \"/#/login\"\r\n        }\r\n        return (\r\n            <div className=\"p-issues\">\r\n                I am Issues\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Issues;","import React from 'react'\r\nimport { Button, Col, Form, FormControl, Row } from 'react-bootstrap';\r\nimport '../pages/messages.css'\r\n\r\nclass MessageSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchQuery: '',\r\n            priorityFilter: '',\r\n            sortBy: 'date'\r\n        }\r\n    }\r\n\r\n    updateSearchQuery = (e) => {\r\n        this.setState({ searchQuery: e.target.value }, () => this.props.onSearchParamsUpdate(this.state))\r\n    }\r\n\r\n    updatePriorityFilter = e => {\r\n        this.setState({ priorityFilter: e.target.value }, () => this.props.onSearchParamsUpdate(this.state))\r\n    }\r\n\r\n    updateSortBy = e => {\r\n        this.setState({ sortBy: e.target.value }, () => this.props.onSearchParamsUpdate(this.state))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"mb-5\">\r\n                <Col className=\"d-flex align-items-center\" md={12} lg={7}>\r\n                   \r\n                        <FormControl \r\n                        value={this.state.searchQuery} \r\n                        onChange={this.updateSearchQuery} \r\n                        className=\".search-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Filter by Text in Title and Details\" \r\n                        />\r\n                        \r\n                  \r\n                    <Button className=\"search-btn m-2\" >Search</Button>\r\n                </Col>\r\n                <Form inline className=\"my-2\">\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Control \r\n                        value={this.state.priorityFilter} \r\n                        onChange={this.updatePriorityFilter} \r\n                        as=\"select\">\r\n                            <option value=\"\">Filter by...</option>\r\n                            <option value=\"info\">Information</option>\r\n                            <option value=\"important\">Important</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n                <Form key={'inline-radio'} className=\"mt-3\"> Sort by: \r\n                    <Form.Check onChange={this.updateSortBy} checked={this.state.sortBy === 'date'} className=\"ml-2\"\r\n                    inline label=\"Date\" name=\"sortby\" type='radio' value='date' />\r\n                    <Form.Check onChange={this.updateSortBy} checked={this.state.sortBy === 'priority'} \r\n                    inline label=\"Priority\" name=\"sortby\" type='radio' value='priority' />\r\n                </Form>\r\n            </Row >\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageSearch;","import React, { Component } from 'react';\r\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap';\r\n\r\nexport default class AddMessageModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            details: '',\r\n            priority: '',\r\n            img: ''\r\n        }\r\n    }\r\n\r\n    clearFields = () =>  this.setState({\r\n        title: '',\r\n        details: '',\r\n        priority: '',\r\n        img: ''\r\n    });\r\n\r\n    closeModal = () => {\r\n        this.clearFields();\r\n        this.props.handleClose();\r\n    }\r\n\r\n    saveDetails = () => {\r\n        this.props.onSave(this.state);\r\n        this.clearFields();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Modal show={this.props.isModalOpen} onHide={this.closeModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add New Message</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group as={Row} >\r\n                            <Form.Label column sm={2}>\r\n                                Title:\r\n                    </Form.Label>\r\n                            <Col sm={10} className=\"mb-2\">\r\n                                <Form.Control required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Message Title\"\r\n                                    value={this.state.title}\r\n                                    onChange={(event) => { this.setState({ title: event.target.value }) }} />\r\n                            </Col>\r\n\r\n                            <Form.Label column sm={2}>\r\n                                Details:\r\n                    </Form.Label>\r\n                            <Col sm={10} className=\"mb-2\">\r\n                                <Form.Control required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Message Details\"\r\n                                    value={this.state.details}\r\n                                    onChange={(event) => { this.setState({ details: event.target.value }) }} />\r\n                            </Col>\r\n\r\n                            <Form.Label column sm={2}>\r\n                                Priority:\r\n                    </Form.Label>\r\n                            <Col sm={10} className=\"mb-5\">\r\n                                <Form.Control required\r\n                                    value={this.state.priority}\r\n                                    onChange={(event) => { this.setState({ priority: event.target.value }) }}\r\n                                    as=\"select\">\r\n                                    <option>Priority</option>\r\n                                    <option value=\"info\">Information</option>\r\n                                    <option value=\"important\">Important</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n\r\n                            <Form.Label column sm={2}>\r\n                                Image:\r\n                    </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Image URL\"\r\n                                    value={this.state.img}\r\n                                    onChange={(event) => { this.setState({ img: event.target.value }) }} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                        Close\r\n                </Button>\r\n                    <Button variant=\"primary\" onClick={this.saveDetails}>\r\n                        Create\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/info-icon.79d21f72.png\";","export default __webpack_public_path__ + \"static/media/important-icon.9e1da50b.jpg\";","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class UpdateMessageForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title: props.messageToUpdate.title || '',\r\n            details: props.messageToUpdate.details || '',\r\n            priority: props.messageToUpdate.priority || ''\r\n        }\r\n    }\r\n\r\n    saveMessage = () => {\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button onClick={this.saveMessage}>Save</Button>\r\n                <Button onClick={this.props.onCancel}>Cancel</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Accordion, Button, Card } from 'react-bootstrap';\r\nimport MessageSearch from '../components/MessageSearch';\r\nimport messagesJSON from '../data/messages.json';\r\nimport { v4 } from 'uuid';\r\nimport './messages.css'\r\nimport AddMessageModal from '../components/AddMessageModal';\r\nimport clsx from 'clsx';\r\nimport infoIcon from '../img/info-icon.png';\r\nimport importantIcon from '../img/important-icon.jpg';\r\nimport UpdateMessageForm from '../components/UpdateMessageForm';\r\n\r\nconst priority_values = { info: 1, important: 2 }\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const localMessages = JSON.parse(localStorage.getItem('localMessages')) || messagesJSON;\r\n\r\n        this.state = {\r\n            messages: localMessages,\r\n            filteredMessages: localMessages,\r\n            searchParameters: {\r\n                searchQuery: '',\r\n                priorityFilter: '',\r\n                sortBy: 'date'\r\n            },\r\n            isModalOpen: false,\r\n            currentlyOpenCard: null,\r\n            messageToUpdate: null\r\n        }\r\n    }\r\n\r\n\r\n    getFilteredMessages = () => {\r\n        let { messages, searchParameters } = this.state;\r\n\r\n        if (searchParameters.searchQuery) {\r\n            messages = messages.filter(m => m.title.includes(searchParameters.searchQuery) || m.details.includes(searchParameters.searchQuery));\r\n        }\r\n\r\n        if (searchParameters.priorityFilter) {\r\n            messages = messages.filter(m => m.priority === searchParameters.priorityFilter);\r\n        }\r\n\r\n        if (searchParameters.sortBy === 'date') {\r\n            messages = messages.sort((m1, m2) => new Date(m1.date) - new Date(m2.date));\r\n        } else {\r\n            messages = messages.sort((m1, m2) => priority_values[m2.priority] - priority_values[m1.priority]);\r\n        }\r\n\r\n        return messages;\r\n    }\r\n\r\n    updateSearchParameters = params => {\r\n        this.setState({ searchParameters: params }, this.updateShownMessages);\r\n    }\r\n\r\n    updateShownMessages = () => {\r\n        this.setState({ filteredMessages: this.getFilteredMessages() })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState(\r\n            {\r\n                isModalOpen: false\r\n            });\r\n    }\r\n\r\n    setMessageToUpdate = message => this.setState({ messageToUpdate: message });\r\n\r\n    saveModalInfo = ({ title, details, priority, img }) => {\r\n        const newMessage = {\r\n            title,\r\n            details,\r\n            priority,\r\n            img,\r\n            userId: this.props.activeUser.id,\r\n            date: (new Date()).toJSON(),\r\n            messageId: v4()\r\n        }\r\n        localStorage.setItem('localMessages', JSON.stringify([...this.state.messages, newMessage]));\r\n        this.setState(prevState => ({ messages: [...prevState.messages, newMessage] }), this.updateShownMessages)\r\n        this.handleClose();\r\n    }\r\n\r\n    updateMessage = updatedMessage => {\r\n        // TODO: Implement message updating\r\n    }\r\n\r\n    deleteMessage = idToDelete => {\r\n        const nextMessages = this.state.messages.filter(m => m.messageId !== idToDelete);\r\n        localStorage.setItem('localMessages', JSON.stringify(nextMessages));\r\n        this.setState({ messages: nextMessages }, this.updateShownMessages)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.activeUser) {\r\n            return window.location.href = \"/#/login\";\r\n        }\r\n        return (\r\n            <div className=\"p-messages\">\r\n                <MessageSearch onSearchParamsUpdate={this.updateSearchParameters} />\r\n                {this.props.activeUser.role === 'committee' &&\r\n                    <div className=\"text-right \">\r\n                        <Button variant=\"link\" className=\"font-weight-bold\" onClick={() => { this.setState({ isModalOpen: true }) }}>New Message</Button>\r\n                    </div>\r\n                }\r\n                <Accordion onSelect={cardId => this.setState({ currentlyOpenCard: cardId })} className=\"mt-2\">\r\n                    {this.state.filteredMessages.map(message =>\r\n                        <Card border=\"secondary\" key={message.messageId}>\r\n                            <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={message.messageId}\r\n                                className={clsx({ 'open-header': this.state.currentlyOpenCard === message.messageId }, \"d-flex justify-content-between message-header\")}>\r\n                                {message.title}\r\n                                {<img className=\"priority-icon\"\r\n                                    src={message.priority === 'info' ? infoIcon : importantIcon}\r\n                                    alt={message.priority === 'info' ? \"info-icon\" : \"important icon\"} />}\r\n                            </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey={message.messageId}>\r\n                                <Card.Body>\r\n                                    {\r\n                                        this.state.messageToUpdate === message ?\r\n                                            <UpdateMessageForm onUpdate={this.updateMessage} messageToUpdate={message} onCancel={() => this.setMessageToUpdate(null)} /> :\r\n                                            <>\r\n                                                <section className=\"d-flex\">\r\n                                                    <div>\r\n                                                        <img className=\"admin-logo mr-3\" src={this.props.activeUser.img} alt=\"user-icon\" />\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <div className=\"d-flex mb-4\"><p className=\"font-weight-bold mr-3\">Details: </p>{message.details}</div>\r\n                                                        <div className=\"d-flex mb-4\"><p className=\"font-weight-bold mr-3\">Priority: </p>{message.priority}</div>\r\n                                                    </div>\r\n                                                </section>\r\n\r\n                                                <div className=\"d-flex justify-content-end\">\r\n                                                    {this.props.activeUser.role === 'committee' &&\r\n                                                        <Button onClick={() => this.setMessageToUpdate(message)} className=\"mr-2\" variant=\"secondary\">Update</Button>\r\n                                                    }\r\n                                                    {this.props.activeUser.role === 'committee' &&\r\n                                                        <Button onClick={() => this.deleteMessage(message.messageId)} className=\"mr-2\" variant=\"danger\">Delete</Button>\r\n                                                    }\r\n                                                </div>\r\n                                            </>\r\n                                    }\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>)}\r\n                </Accordion>\r\n\r\n                <AddMessageModal isModalOpen={this.state.isModalOpen} handleClose={this.handleClose} onSave={this.saveModalInfo} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nclass Tenants extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        if(!this.props.activeUser){\r\n            window.location.href = \"/#/login\"\r\n        }\r\n        return (\r\n            <Container className=\"d-flex\" fluid=\"md\">\r\n                <Row>\r\n                    <Col>{this.props.activeUser.role === 'tenant' ? <></> : <div></div>}</Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row></Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tenants;","import React from 'react';\r\n\r\nclass Voting extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        if(!this.props.activeUser){\r\n            window.location.href = \"/#/login\"\r\n        }\r\n        return (\r\n            <div className=\"p-voting\">\r\n                I am Voting\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Voting;","\r\nimport React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\nclass HoaNavbar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        // tenant/commette member links shown only after authorization\r\n        const menuEl = (this.props.activeUser) ? \r\n        <Nav variant=\"primary\" className=\"mr-auto\">\r\n            <Nav.Link href=\"/#/dashboard\">Dashboard</Nav.Link>\r\n            <Nav.Link href=\"/#/tenants\">Tenants</Nav.Link>\r\n            <Nav.Link href=\"/#/messages\">Messages</Nav.Link>\r\n            <Nav.Link href=\"/#/issues\">Issues</Nav.Link>\r\n            <Nav.Link href=\"/#/voting\">Voting</Nav.Link>\r\n        </Nav>\r\n            : null;\r\n        // before authorization shown only navbar brand and login/sigup options\r\n        // after authorization switch to log out\r\n        const loginEl = ( ! this.props.activeUser) && <Nav.Link href=\"/#/login\">Login</Nav.Link> ;\r\n        const signupEl = ( ! this.props.activeUser) &&  <Nav.Link href=\"/#/signup\">Sign Up</Nav.Link>;\r\n        const nameEl = ( this.props.activeUser) &&  <Nav.Link disabled>Hello {this.props.activeUser.name}</Nav.Link>;\r\n        const logoutEl= (this.props.activeUser) &&\r\n        <Nav.Link href=\"/#/\" onClick={this.props.handleLogout}>\r\n            Log out\r\n        </Nav.Link> \r\n        \r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\" className=\"mb-3\">\r\n                <Navbar.Brand href=\"/#/\">HOA Systems</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    {menuEl}\r\n                    <Nav className=\"ml-auto\">\r\n                        {loginEl}\r\n                        {signupEl}\r\n                        {nameEl}\r\n                        {logoutEl}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HoaNavbar;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Homepage from './pages/Homepage';\nimport Login from './pages/Login';\nimport Signup from './pages/Sigup';\nimport Dashboard from './pages/Dashboard';\nimport Issues from './pages/Issues';\nimport Messages from './pages/Messages';\nimport Tenants from './pages/Tenants';\nimport Voting from './pages/Voting';\nimport HoaNavbar from './components/HoaNavbar';\nimport { Container } from 'react-bootstrap';\nimport userJSON from './data/users.json';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    let usersData = JSON.parse(localStorage.getItem('localUsers')) || userJSON;\n   \n\n    this.state = {\n      activeUser: JSON.parse(localStorage.getItem('loggedInUser')) || null,\n      allUsers: usersData\n    }\n  }\n\n  addUser = (newUser) => {\n    const localUsersString = JSON.stringify(this.state.allUsers.concat(newUser));\n    localStorage.setItem('localUsers', localUsersString);\n    this.setState({\n      activeUser: newUser,\n      allUsers: this.state.allUsers.concat(newUser)\n    });\n  }\n\n \n\n  login = (userObj) => {\n    this.setState({\n      activeUser: userObj,\n    })\n    localStorage.setItem('loggedInUser', JSON.stringify(userObj));\n\n  }\n\n  handleLogout = () => {\n    this.setState({\n      activeUser: null,\n    }, () => {\n      localStorage.setItem('loggedInUser', JSON.stringify(null));\n      window.location.href = '/#/';\n    });\n\n  }\n\n  render() {\n    return (\n      <HashRouter>\n        <Route exact path={[\"/\", \"/dashboard\", \"/issues\", \"/messages\", \"/tenants\", \"/voting\"]}>\n          <HoaNavbar\n            activeUser={this.state.activeUser}\n            handleLogout={this.handleLogout}\n          />\n        </Route>\n        <Container>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login\n              allUsers={this.state.allUsers}\n              login={this.login} />\n          </Route>\n          <Route exact path=\"/signup\">\n            <Signup addUser={this.addUser} />\n          </Route>\n          <Route exact path=\"/dashboard\">\n            <Dashboard activeUser={this.state.activeUser} />\n          </Route>\n          <Route exact path=\"/issues\">\n            <Issues activeUser={this.state.activeUser} />\n          </Route>\n          <Route exact path=\"/messages\">\n            <Messages\n              activeUser={this.state.activeUser} />\n          </Route>\n          <Route exact path=\"/tenants\">\n            <Tenants\n              activeUser={this.state.activeUser}\n              allUsers={this.state.allUsers} />\n          </Route>\n          <Route exact path=\"/voting\">\n            <Voting activeUser={this.state.activeUser} />\n          </Route>\n        </Container>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}