{"version":3,"sources":["pages/Homepage.js","pages/Login.js","pages/Signup.js","pages/Dashboard.js","pages/Issues.js","components/MessageSearch.js","components/AddMessageModal.js","img/info-icon.png","img/important-icon.jpg","components/UpdateMessageModal.js","pages/Messages.js","pages/Tenants.js","pages/Voting.js","components/HoaNavbar.js","App.js","reportWebVitals.js","index.js"],"names":["Homepage","props","className","React","Component","Login","updatePwd","event","setState","pwd","target","value","updateEmail","email","handleLogin","foundUser","allUsers","find","user","state","login","window","location","href","alert","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","type","placeholder","onChange","this","span","offset","Button","onClick","variant","block","to","Signup","createUser","name","trim","building","city","pwd2","newUserObj","adress","addUser","e","img","Dashboard","activeUser","Issues","MessageSearch","updateSearchQuery","searchQuery","onSearchParamsUpdate","updatePriorityFilter","priorityFilter","updateSortBy","sortBy","md","lg","FormControl","inline","Check","checked","label","AddMessageModal","clearFields","title","details","priority","closeModal","handleClose","saveDetails","onSave","Modal","show","isModalOpen","onHide","Header","closeButton","Title","Body","required","rows","Footer","UpdateMessageModal","onCancel","onUpdate","messageId","messageToUpdate","priority_values","info","important","Messages","getFilteredMessages","messages","searchParameters","filter","m","includes","sort","m1","m2","Date","date","updateSearchParameters","params","updateShownMessages","filteredMessages","setMessageToUpdate","message","saveModalInfo","newMessage","userId","id","toJSON","v4","localStorage","setItem","JSON","stringify","prevState","updateMessage","updatedMessage","messageIndex","findIndex","deleteMessage","idToDelete","nextMessages","localMessages","parse","getItem","messagesJSON","currentlyOpenCard","role","Accordion","onSelect","cardId","map","Card","border","Toggle","eventKey","clsx","src","infoIcon","importantIcon","alt","Collapse","Tenants","Voting","HoaNavbar","menuEl","Nav","component","Link","loginEl","signupEl","nameEl","disabled","logoutEl","handleLogout","Navbar","bg","expand","Brand","aria-controls","App","newUser","localUsersString","concat","userObj","usersData","userJSON","basename","exact","path","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.788f09c5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Homepage extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"p-homepage\">\r\n                I am Homepage\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            pwd: '',\r\n        }\r\n    }\r\n    updatePwd = (event) => {\r\n        this.setState({\r\n            pwd: event.target.value\r\n        });\r\n    }\r\n    updateEmail = (event) => {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n    handleLogin = () => {\r\n        const foundUser = this.props.allUsers.find( (user) => {\r\n            return (user.email === this.state.email && user.pwd === this.state.pwd);\r\n        });\r\n        if(foundUser) {\r\n            this.props.login(foundUser);\r\n            window.location.href = '/#/messages';\r\n        }\r\n        else{\r\n            alert('Incorrect Email or Password');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"p-login\">\r\n                <h1>Login to HomeOwner Assosiation Management System</h1>\r\n                <Form className=\"mt-5\">\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Email\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <Form.Control type=\"email\" placeholder=\"Email\" onChange={this.updateEmail} value={this.state.email}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={2}>\r\n                        Password\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.updatePwd} value={this.state.pwd}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                        <Button onClick={this.handleLogin} variant=\"success\" block type=\"button\">Log in</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n                <Link to=\"/signup\">Sign up</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nclass Signup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            pwd: '',\r\n            building: '',\r\n            adress: '',\r\n            city: '',\r\n            pwd2: ''\r\n        }\r\n    }\r\n    createUser = () => {\r\n        //TODO bootstrap validation form\r\n        if(this.state.name.trim() === ''){\r\n            return alert('Name is required')\r\n        }\r\n        if(this.state.email.trim() === ''){\r\n            return alert('Email is required')\r\n        }\r\n        if(this.state.pwd.trim() === ''){\r\n            return alert('Password is required')\r\n        }\r\n        if(this.state.building.trim() === ''){\r\n            return alert('Building number/Condominium name is required')\r\n        }\r\n        if(this.state.city.trim() === ''){\r\n            return alert('Building number/COndominium name is required')\r\n        }\r\n\r\n        if(this.state.pwd.trim() !== this.state.pwd2.trim()){\r\n            return alert('Password does not match')\r\n        }\r\n        \r\n        const newUserObj = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            pwd: this.state.pwd,\r\n            building: this.state.building,\r\n            adress: this.state.adress,\r\n            city: this.state.city,\r\n        }\r\n        this.props.addUser(newUserObj);\r\n        window.location.href = '/#/dashboard';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"p-signup\">\r\n                <h1>Signup as Committee Member</h1>\r\n                <Form className=\"mt-5\">\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label column sm={2}>\r\n                            Name*\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Name\" onChange={(e) => this.setState({ name: e.target.value })} value={this.state.name} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label column sm={2}>\r\n                            Email*\r\n                        </Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Email\" onChange={(e) => this.setState({ email: e.target.value })} value={this.state.email} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label column sm={2}>\r\n                            Password*\r\n                        </Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => this.setState({ pwd: e.target.value })} value={this.state.pwd} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword2\">\r\n                        <Form.Label column sm={2}>\r\n                            Re-enter Password*\r\n                        </Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Re-enter Password\" onChange={(e) => this.setState({ pwd2: e.target.value })} value={this.state.pwd2} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicBuilding\">\r\n                        <Form.Label column sm={2}>\r\n                            Building/Condominium*\r\n                        </Form.Label >\r\n                        <Form.Control type=\"text\" placeholder=\"Building/Condominium\" onChange={(e) => this.setState({ building: e.target.value })} value={this.state.building} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicAdress\">\r\n                        <Form.Label column sm={2}>\r\n                            Adress*\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Adress\" onChange={(e) => this.setState({ adress: e.target.value })} value={this.state.adress} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicCity\">\r\n                        <Form.Label column sm={2}>\r\n                            City*\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"City\" onChange={(e) => this.setState({ city: e.target.value })} value={this.state.city} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicImg\">\r\n                        <Form.Label column sm={2}>\r\n                            Profile photo link\r\n                        </Form.Label>\r\n                        <Form.Control type=\"txt\" placeholder=\"Profile photo link\" onChange={(e) => this.setState({ img: e.target.value })} value={this.state.img} />\r\n                    </Form.Group>\r\n\r\n                    <p>*Required fields</p>\r\n\r\n                    <Form.Group>\r\n                        <Button onClick={this.createUser} variant=\"success\" block type=\"button\">Sign up!</Button>\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        if(!this.props.activeUser){\r\n            window.location.href = \"/#/login\"\r\n        }\r\n        return (\r\n            <div className=\"p-dashboard\">\r\n                I am Dashboard\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\n\r\nclass Issues extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        if(!this.props.activeUser){\r\n            window.location.href = \"/#/login\"\r\n        }\r\n        return (\r\n            <div className=\"p-issues\">\r\n                I am Issues\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Issues;","import React from 'react'\r\nimport { Button, Col, Form, FormControl, Row } from 'react-bootstrap';\r\nimport '../pages/messages.css'\r\n\r\nclass MessageSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchQuery: '',\r\n            priorityFilter: '',\r\n            sortBy: 'date'\r\n        }\r\n    }\r\n\r\n    updateSearchQuery = (e) => {\r\n        this.setState({ searchQuery: e.target.value }, () => this.props.onSearchParamsUpdate(this.state))\r\n    }\r\n\r\n    updatePriorityFilter = e => {\r\n        this.setState({ priorityFilter: e.target.value }, () => this.props.onSearchParamsUpdate(this.state))\r\n    }\r\n\r\n    updateSortBy = e => {\r\n        this.setState({ sortBy: e.target.value }, () => this.props.onSearchParamsUpdate(this.state))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"mb-5\">\r\n                <Col className=\"d-flex align-items-center\" md={12} lg={7}>\r\n                   \r\n                        <FormControl \r\n                        value={this.state.searchQuery} \r\n                        onChange={this.updateSearchQuery} \r\n                        className=\".search-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Filter by Text in Title and Details\" \r\n                        />\r\n                        \r\n                  \r\n                    <Button className=\"search-btn m-2\" >Search</Button>\r\n                </Col>\r\n                <Form inline className=\"my-2\">\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Control \r\n                        value={this.state.priorityFilter} \r\n                        onChange={this.updatePriorityFilter} \r\n                        as=\"select\">\r\n                            <option value=\"\">Filter by...</option>\r\n                            <option value=\"info\">Information</option>\r\n                            <option value=\"important\">Important</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n                <Form key={'inline-radio'} className=\"mt-3\"> Sort by: \r\n                    <Form.Check onChange={this.updateSortBy} checked={this.state.sortBy === 'date'} className=\"ml-2\"\r\n                    inline label=\"Date\" name=\"sortby\" type='radio' value='date' />\r\n                    <Form.Check onChange={this.updateSortBy} checked={this.state.sortBy === 'priority'} \r\n                    inline label=\"Priority\" name=\"sortby\" type='radio' value='priority' />\r\n                </Form>\r\n            </Row >\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageSearch;","import React, { Component } from 'react';\r\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap';\r\n\r\nexport default class AddMessageModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            details: '',\r\n            priority: '',\r\n            img: ''\r\n        }\r\n    }\r\n\r\n    clearFields = () =>  this.setState({\r\n        title: '',\r\n        details: '',\r\n        priority: '',\r\n        img: ''\r\n    });\r\n\r\n    closeModal = () => {\r\n        this.clearFields();\r\n        this.props.handleClose();\r\n    }\r\n\r\n    saveDetails = () => {\r\n        // TODO bootstrap form validation \r\n        if(this.state.title.trim() === ''){\r\n            return alert('Message title is required')\r\n        }\r\n        if(this.state.details.trim() === ''){\r\n            return alert('Message details is required')\r\n        }\r\n        if(this.state.priority === ''){\r\n            return alert('Message priority is required')\r\n        }\r\n        this.props.onSave(this.state);\r\n        this.clearFields();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal show={this.props.isModalOpen} onHide={this.closeModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add New Message</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group as={Row} >\r\n                            <Form.Label column sm={2}>\r\n                                Title:\r\n                    </Form.Label>\r\n                            <Col sm={10} className=\"mb-2\">\r\n                                <Form.Control required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Message Title\"\r\n                                    value={this.state.title}\r\n                                    onChange={(event) => { this.setState({ title: event.target.value }) }} />\r\n                            </Col>\r\n\r\n                            <Form.Label column sm={2}>\r\n                                Details:\r\n                            </Form.Label>\r\n                            <Col sm={10} className=\"mb-2\">\r\n                                <Form.Control as=\"textarea\" rows={3} required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Message Details\"\r\n                                    value={this.state.details}\r\n                                    onChange={(event) => { this.setState({ details: event.target.value }) }} />\r\n                            </Col>\r\n\r\n                            <Form.Label column sm={2}>\r\n                                Priority:\r\n                    </Form.Label>\r\n                            <Col sm={10} className=\"mb-5\">\r\n                                <Form.Control required\r\n                                    value={this.state.priority}\r\n                                    onChange={(event) => { this.setState({ priority: event.target.value }) }}\r\n                                    as=\"select\">\r\n                                    <option>Priority</option>\r\n                                    <option value=\"info\">Information</option>\r\n                                    <option value=\"important\">Important</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n\r\n                            <Form.Label column sm={2}>\r\n                                Image:\r\n                    </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Image URL\"\r\n                                    value={this.state.img}\r\n                                    onChange={(event) => { this.setState({ img: event.target.value }) }} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                        Close\r\n                </Button>\r\n                    <Button variant=\"primary\" onClick={this.saveDetails}>\r\n                        Create\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/info-icon.79d21f72.png\";","export default __webpack_public_path__ + \"static/media/important-icon.9e1da50b.jpg\";","import React, { Component } from 'react';\r\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap';\r\n\r\nexport default class UpdateMessageModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: props.messageToUpdate.title || '',\r\n            details: props.messageToUpdate.details || '',\r\n            priority: props.messageToUpdate.priority || '',\r\n            img: props.messageToUpdate.img || ''\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.onCancel();\r\n    }\r\n\r\n    saveDetails = () => {\r\n        if(this.state.title.trim() === ''){\r\n            return alert('Message title is required')\r\n        }\r\n        if(this.state.details.trim() === ''){\r\n            return alert('Message details is required')\r\n        }\r\n        if(this.state.priority === ''){\r\n            return alert('Message priority is required')\r\n        }\r\n        this.props.onUpdate({...this.state, messageId: this.props.messageToUpdate.messageId});\r\n        this.closeModal();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal show={true} onHide={this.closeModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit Message</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group as={Row} >\r\n                            <Form.Label column sm={2}>\r\n                                Title:\r\n                    </Form.Label>\r\n                            <Col sm={10} className=\"mb-2\">\r\n                                <Form.Control required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Message Title\"\r\n                                    value={this.state.title}\r\n                                    onChange={(event) => { this.setState({ title: event.target.value }) }} />\r\n                            </Col>\r\n\r\n                            <Form.Label column sm={2}>\r\n                                Details:\r\n                            </Form.Label>\r\n                            <Col sm={10} className=\"mb-2\">\r\n                                <Form.Control as=\"textarea\" rows={3} required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Message Details\"\r\n                                    value={this.state.details}\r\n                                    onChange={(event) => { this.setState({ details: event.target.value }) }} />\r\n                            </Col>\r\n\r\n                            <Form.Label column sm={2}>\r\n                                Priority:\r\n                    </Form.Label>\r\n                            <Col sm={10} className=\"mb-5\">\r\n                                <Form.Control required\r\n                                    value={this.state.priority}\r\n                                    onChange={(event) => { this.setState({ priority: event.target.value }) }}\r\n                                    as=\"select\">\r\n                                    <option>Priority</option>\r\n                                    <option value=\"info\">Information</option>\r\n                                    <option value=\"important\">Important</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n\r\n                            <Form.Label column sm={2}>\r\n                                Image:\r\n                    </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Image URL\"\r\n                                    value={this.state.img}\r\n                                    onChange={(event) => { this.setState({ img: event.target.value }) }} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                        Cancel\r\n                </Button>\r\n                    <Button variant=\"primary\" onClick={this.saveDetails}>\r\n                        Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Accordion, Button, Card } from 'react-bootstrap';\r\nimport MessageSearch from '../components/MessageSearch';\r\nimport messagesJSON from '../data/messages.json';\r\nimport { v4 } from 'uuid';\r\nimport './messages.css'\r\nimport AddMessageModal from '../components/AddMessageModal';\r\nimport clsx from 'clsx';\r\nimport infoIcon from '../img/info-icon.png';\r\nimport importantIcon from '../img/important-icon.jpg';\r\nimport UpdateMessageModal from '../components/UpdateMessageModal';\r\n\r\nconst priority_values = { info: 1, important: 2 }\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const localMessages = JSON.parse(localStorage.getItem('localMessages')) || messagesJSON;\r\n\r\n        this.state = {\r\n            messages: localMessages,\r\n            filteredMessages: localMessages,\r\n            searchParameters: {\r\n                searchQuery: '',\r\n                priorityFilter: '',\r\n                sortBy: 'date'\r\n            },\r\n            isModalOpen: false,\r\n            currentlyOpenCard: null,\r\n            messageToUpdate: null\r\n        }\r\n    }\r\n\r\n\r\n    getFilteredMessages = () => {\r\n        let { messages, searchParameters } = this.state;\r\n\r\n        if (searchParameters.searchQuery) {\r\n            messages = messages.filter(m => m.title.includes(searchParameters.searchQuery) || m.details.includes(searchParameters.searchQuery));\r\n        }\r\n\r\n        if (searchParameters.priorityFilter) {\r\n            messages = messages.filter(m => m.priority === searchParameters.priorityFilter);\r\n        }\r\n\r\n        if (searchParameters.sortBy === 'date') {\r\n            messages = messages.sort((m1, m2) => new Date(m1.date) - new Date(m2.date));\r\n        } else {\r\n            messages = messages.sort((m1, m2) => priority_values[m2.priority] - priority_values[m1.priority]);\r\n        }\r\n\r\n        return messages;\r\n    }\r\n\r\n    updateSearchParameters = params => {\r\n        this.setState({ searchParameters: params }, this.updateShownMessages);\r\n    }\r\n\r\n    updateShownMessages = () => {\r\n        this.setState({ filteredMessages: this.getFilteredMessages() })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState(\r\n            {\r\n                isModalOpen: false\r\n            });\r\n    }\r\n\r\n    setMessageToUpdate = message => this.setState({ messageToUpdate: message });\r\n\r\n    saveModalInfo = ({ title, details, priority, img }) => {\r\n        const newMessage = {\r\n            title,\r\n            details,\r\n            priority,\r\n            img,\r\n            userId: this.props.activeUser.id,\r\n            date: (new Date()).toJSON(),\r\n            messageId: v4()\r\n        }\r\n        localStorage.setItem('localMessages', JSON.stringify([...this.state.messages, newMessage]));\r\n        this.setState(prevState => ({ messages: [...prevState.messages, newMessage] }), this.updateShownMessages)\r\n        this.handleClose();\r\n    }\r\n\r\n    updateMessage = updatedMessage => {\r\n       const {messages} = this.state;\r\n       const messageIndex = messages.findIndex(m => m.messageId === updatedMessage.messageId);\r\n       messages[messageIndex] = {...messages[messageIndex],...updatedMessage};\r\n       localStorage.setItem('localMessages', JSON.stringify(messages));\r\n        this.setState({messages: [...messages]}, this.updateShownMessages)\r\n       \r\n    }\r\n\r\n    deleteMessage = idToDelete => {\r\n        const nextMessages = this.state.messages.filter(m => m.messageId !== idToDelete);\r\n        localStorage.setItem('localMessages', JSON.stringify(nextMessages));\r\n        this.setState({ messages: nextMessages }, this.updateShownMessages)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.activeUser) {\r\n            return window.location.href = \"/#/login\";\r\n        }\r\n        return (\r\n            <div className=\"p-messages\">\r\n                <MessageSearch onSearchParamsUpdate={this.updateSearchParameters} />\r\n                {this.props.activeUser.role === 'committee' &&\r\n                    <div className=\"text-right \">\r\n                        <Button variant=\"link\" className=\"font-weight-bold\" onClick={() => { this.setState({ isModalOpen: true }) }}>New Message</Button>\r\n                    </div>\r\n                }\r\n                <Accordion onSelect={cardId => this.setState({ currentlyOpenCard: cardId })} className=\"mt-2\">\r\n                    {this.state.filteredMessages.map(message =>\r\n\r\n\r\n                        <Card border=\"secondary\" key={message.messageId}>\r\n                            <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={message.messageId}\r\n                                className={clsx({ 'open-header': this.state.currentlyOpenCard === message.messageId }, \"d-flex justify-content-between message-header\")}>\r\n                                {message.title}\r\n                                {<img className=\"priority-icon\"\r\n                                    src={message.priority === 'info' ? infoIcon : importantIcon}\r\n                                    alt={message.priority === 'info' ? \"info-icon\" : \"important icon\"} />}\r\n                            </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey={message.messageId}>\r\n                                <Card.Body>\r\n                                    <section className=\"d-flex\">\r\n                                        <div>\r\n                                            <div className=\"d-flex mb-4\"><p className=\"font-weight-bold mr-3\">Details: </p>{message.details}</div>\r\n                                            <div className=\"d-flex mb-4\"><p className=\"font-weight-bold mr-3\">Priority: </p>{message.priority}</div>\r\n                                            <img className=\"message-img\" src={message.img} />\r\n                                        </div>\r\n                                            \r\n                                    \r\n                                    </section>\r\n\r\n                                    <div className=\"d-flex justify-content-end\">\r\n                                        {this.props.activeUser.role === 'committee' &&\r\n                                            <Button onClick={() => this.setMessageToUpdate(message)} className=\"mr-2\" variant=\"secondary\">Update</Button>\r\n                                        }\r\n                                        {this.props.activeUser.role === 'committee' &&\r\n                                            <Button onClick={() => this.deleteMessage(message.messageId)} className=\"mr-2\" variant=\"danger\">Delete</Button>\r\n                                        }\r\n                                    </div>\r\n\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>)}\r\n                </Accordion>\r\n                {this.state.messageToUpdate && <UpdateMessageModal onUpdate={this.updateMessage} messageToUpdate={this.state.messageToUpdate} onCancel={() => this.setMessageToUpdate(null)} /> }\r\n                <AddMessageModal isModalOpen={this.state.isModalOpen} handleClose={this.handleClose} onSave={this.saveModalInfo} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\n\r\nclass Tenants extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        if(!this.props.activeUser){\r\n            window.location.href = \"/#/login\"\r\n        }\r\n        return (\r\n            <div className=\"p-tenants\">\r\n                I am Tenants\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tenants;","import React from 'react';\r\n\r\nclass Voting extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        if(!this.props.activeUser){\r\n            window.location.href = \"/#/login\"\r\n        }\r\n        return (\r\n            <div className=\"p-voting\">\r\n                I am Voting\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Voting;","\r\nimport React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass HoaNavbar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render() {\r\n        // tenant/commette member links shown only after authorization\r\n        const menuEl = (this.props.activeUser) ? \r\n        <Nav variant=\"primary\" className=\"mr-auto\">\r\n            <Link component={Nav.Link} to=\"/dashboard\">Dashboard</Link>\r\n            <Link component={Nav.Link} to=\"/tenants\">Tenants</Link>\r\n            <Link component={Nav.Link} to=\"/messages\">Messages</Link>\r\n            <Link component={Nav.Link} to=\"/issues\">Issues</Link>\r\n            <Link component={Nav.Link} to=\"/voting\">Voting</Link>\r\n        </Nav>\r\n            : null;\r\n        // before authorization shown only navbar brand and login/sigup options\r\n        // after authorization switch to log out\r\n        const loginEl = ( ! this.props.activeUser) && <Link component={Nav.Link} to=\"/login\">Login</Link> ;\r\n        const signupEl = ( ! this.props.activeUser) &&  <Link component={Nav.Link} to=\"/signup\">Sign Up</Link>;\r\n        const nameEl = ( this.props.activeUser) &&  <Link component={Nav.Link} disabled>Hello {this.props.activeUser.name}</Link>;\r\n        const logoutEl= (this.props.activeUser) &&\r\n        <Link component={Nav.Link} to=\"/\" onClick={this.props.handleLogout}>\r\n            Log out\r\n        </Link> \r\n        \r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\" className=\"mb-3\">\r\n                <Link component={Navbar.Brand} to=\"/\">HOA Systems</Link>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    {menuEl}\r\n                    <Nav className=\"ml-auto\">\r\n                        {loginEl}\r\n                        {signupEl}\r\n                        {nameEl}\r\n                        {logoutEl}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HoaNavbar;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Homepage from './pages/Homepage';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Dashboard from './pages/Dashboard';\nimport Issues from './pages/Issues';\nimport Messages from './pages/Messages';\nimport Tenants from './pages/Tenants';\nimport Voting from './pages/Voting';\nimport HoaNavbar from './components/HoaNavbar';\nimport { Container } from 'react-bootstrap';\nimport userJSON from './data/users.json';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    let usersData = JSON.parse(localStorage.getItem('localUsers')) || userJSON;\n   \n\n    this.state = {\n      activeUser: JSON.parse(localStorage.getItem('loggedInUser')) || null,\n      allUsers: usersData\n    }\n  }\n\n  addUser = (newUser) => {\n    const localUsersString = JSON.stringify(this.state.allUsers.concat(newUser));\n    localStorage.setItem('localUsers', localUsersString);\n    this.setState({\n      activeUser: newUser,\n      allUsers: this.state.allUsers.concat(newUser)\n    });\n  }\n\n  login = (userObj) => {\n    this.setState({\n      activeUser: userObj,\n    })\n    localStorage.setItem('loggedInUser', JSON.stringify(userObj));\n\n  }\n\n  handleLogout = () => {\n    this.setState({\n      activeUser: null,\n    }, () => {\n      localStorage.setItem('loggedInUser', JSON.stringify(null));\n      window.location.href = '/#/';\n    });\n\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <Route exact path={[\"/\", \"/dashboard\", \"/issues\", \"/messages\", \"/tenants\", \"/voting\"]}>\n          <HoaNavbar\n            activeUser={this.state.activeUser}\n            handleLogout={this.handleLogout}\n          />\n        </Route>\n        <Container>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login\n              allUsers={this.state.allUsers}\n              login={this.login} />\n          </Route>\n          <Route exact path=\"/signup\">\n            <Signup addUser={this.addUser} />\n          </Route>\n          <Route exact path=\"/dashboard\">\n            <Dashboard activeUser={this.state.activeUser} />\n          </Route>\n          <Route exact path=\"/issues\">\n            <Issues activeUser={this.state.activeUser} />\n          </Route>\n          <Route exact path=\"/messages\">\n            <Messages\n              activeUser={this.state.activeUser} />\n          </Route>\n          <Route exact path=\"/tenants\">\n            <Tenants\n              activeUser={this.state.activeUser}\n              allUsers={this.state.allUsers} />\n          </Route>\n          <Route exact path=\"/voting\">\n            <Voting activeUser={this.state.activeUser} />\n          </Route>\n        </Container>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}